{"ast":null,"code":"var _jsxFileName = \"/Users/melissavelasquezgreene/Development/code/phase-2/Phase-2-pnt/src/components/PlaneteersContainer.js\";\nimport React from \"react\";\nimport Planeteer from \"./Planeteer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlaneteersContainer(_ref) {\n  let {\n    planeteers,\n    sortByAge\n  } = _ref;\n  console.log(sortByAge); // true or false\n  const currentYear = new Date().getFullYear();\n  const planeteersWithAge = planeteers.map(planeteer => {\n    const age = currentYear - planeteer.born;\n    return {\n      ...planeteer,\n      age\n    };\n  });\n  if (sortByAge) {\n    // Sort the planeteers by age\n    planeteersWithAge.sort((a, b) => a.age - b.age);\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"cards\",\n    children: planeteersWithAge.map((planeteer, index) => /*#__PURE__*/_jsxDEV(Planeteer, {\n      ...planeteer\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = PlaneteersContainer;\nexport default PlaneteersContainer;\nvar _c;\n$RefreshReg$(_c, \"PlaneteersContainer\");","map":{"version":3,"names":["React","Planeteer","jsxDEV","_jsxDEV","PlaneteersContainer","_ref","planeteers","sortByAge","console","log","currentYear","Date","getFullYear","planeteersWithAge","map","planeteer","age","born","sort","a","b","className","children","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/melissavelasquezgreene/Development/code/phase-2/Phase-2-pnt/src/components/PlaneteersContainer.js"],"sourcesContent":["import React from \"react\";\nimport Planeteer from \"./Planeteer\";\n\nfunction PlaneteersContainer({ planeteers, sortByAge }) {\n  console.log(sortByAge); // true or false\n  const currentYear = new Date().getFullYear();\n  const planeteersWithAge = planeteers.map((planeteer) => {\n    const age = currentYear - planeteer.born;\n    return { ...planeteer, age };\n  });\n\n  if (sortByAge) {\n    // Sort the planeteers by age\n    planeteersWithAge.sort((a, b) => a.age - b.age);\n  }\n\n  return (\n    <ul className=\"cards\">\n      {planeteersWithAge.map((planeteer, index) => (\n        <Planeteer key={index} {...planeteer} />\n      ))}\n    </ul>\n  );\n}\n\nexport default PlaneteersContainer;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,mBAAmBA,CAAAC,IAAA,EAA4B;EAAA,IAA3B;IAAEC,UAAU;IAAEC;EAAU,CAAC,GAAAF,IAAA;EACpDG,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC,CAAC,CAAC;EACxB,MAAMG,WAAW,GAAG,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;EAC5C,MAAMC,iBAAiB,GAAGP,UAAU,CAACQ,GAAG,CAAEC,SAAS,IAAK;IACtD,MAAMC,GAAG,GAAGN,WAAW,GAAGK,SAAS,CAACE,IAAI;IACxC,OAAO;MAAE,GAAGF,SAAS;MAAEC;IAAI,CAAC;EAC9B,CAAC,CAAC;EAEF,IAAIT,SAAS,EAAE;IACb;IACAM,iBAAiB,CAACK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACH,GAAG,GAAGI,CAAC,CAACJ,GAAG,CAAC;EACjD;EAEA,oBACEb,OAAA;IAAIkB,SAAS,EAAC,OAAO;IAAAC,QAAA,EAClBT,iBAAiB,CAACC,GAAG,CAAC,CAACC,SAAS,EAAEQ,KAAK,kBACtCpB,OAAA,CAACF,SAAS;MAAA,GAAiBc;IAAS,GAApBQ,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAET;AAACC,EAAA,GApBQxB,mBAAmB;AAsB5B,eAAeA,mBAAmB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}